import{connectStreamSource as e,disconnectStreamSource as t}from"@hotwired/turbo";import*as s from"@hotwired/turbo";export{s as Turbo};let n;async function getConsumer(){return n||setConsumer(createConsumer().then(setConsumer))}function setConsumer(e){return n=e}async function createConsumer(){const{createConsumer:e}=await import("@rails/actioncable/src");return e()}async function subscribeTo(e,t){const{subscriptions:s}=await getConsumer();return s.create(e,t)}var r=Object.freeze({__proto__:null,[Symbol.toStringTag]:"Module",getConsumer:getConsumer,setConsumer:setConsumer,createConsumer:createConsumer,subscribeTo:subscribeTo});class TurboCableStreamSourceElement extends HTMLElement{async connectedCallback(){e(this);this.subscription=await subscribeTo(this.channel,{received:this.dispatchMessageEvent.bind(this)})}disconnectedCallback(){t(this);this.subscription&&this.subscription.unsubscribe()}dispatchMessageEvent(e){const t=new MessageEvent("message",{data:e});return this.dispatchEvent(t)}get channel(){const e=this.getAttribute("channel");const t=this.getAttribute("signed-stream-name");return{channel:e,signed_stream_name:t}}}customElements.define("turbo-cable-stream-source",TurboCableStreamSourceElement);export{r as cable};

